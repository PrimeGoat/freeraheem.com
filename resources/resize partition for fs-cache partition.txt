Used this as a reference: https://www.ismay.ca/2015/10/repartition-a-debian-digital-ocean-droplet/

1. Check the main storage device:
# fdisk -l /dev/vda


2. Install GRML Rescue Boot

apt-get -y install grml-rescueboot && cd /boot/grml/ && wget http://ftp.halifax.rwth-aachen.de/grml/grml64-small_2020.06.iso && update-grub

Generating grub configuration file ...
Found linux image: /boot/vmlinuz-3.16.0-4-amd64
Found initrd image: /boot/initrd.img-3.16.0-4-amd64
Found Grml ISO image: /boot/grml/grml64-small_2014.11.iso
done

3. Boot from GRML

Type reboot or shutdown -r now on the terminal window and wait for the Grub menu
Select the Grml Rescue Image Option from the Grub menu
Select ‘advanced options’ from the Grml boot menu
Select ‘copy Grml to RAM’ option

4. Repartition

1. use resize2fs to shrink the existing filesystem:

# fsck.ext4 -f /dev/vda1 && resize2fs -M /dev/vda1

2. use parted to shrink the partition and create a new LVM partition:

# parted /dev/vda
resizepart 1 78123007s
mkpart primary 78123008s 100%
quit

3. Verify your work:

# resize2fs /dev/vda1 && fdisk -l /dev/vda

4. Reboot to Debian:

root@grml ~ # reboot

6. Add your new volumes to /etc/fstab:



# /etc/fstab: static file system information.
UUID=997099e3-394b-44f6-8e1a-d10f0ff1810f       /       ext4    errors=remount-ro       0       1


/dev/vda2        /var/cache/fscache    xfs     auto,nouser,exec,rw,async,noatime,attr2,nodiscard,inode64,noquota       0 0
10.116.0.6:/var/storage         /var/storage nfs        auto,rw,async,fsc

Verify content: cat /etc/fstab

7. Format and mount:

# apt-get -y install cachefilesd xfsprogs nfs-common && mkfs.xfs /dev/vda2 && mkdir /var/storage && chmod 755 /var/storage && mount /var/storage && mount /var/cache/fscache && df -h
# modprobe cachefiles


edit /etc/default/cachefilesd
Add:
RUN=yes

edit /etc/cachefilesd.conf
Uncomment the selinux line


# service cachefilesd restart ; service cachefilesd restart ; ps aux|grep cache


DB SETUP


MASTER:
Edit /etc/mysql/mariadb.conf.d/50-server.cnf
skip-networking         = 0
bind-address            = 10.116.0.6

run mysqld:
SELECT User, Host FROM mysql.user WHERE Host <> 'localhost';

Sample: GRANT ALL PRIVILEGES ON *.* TO 'root'@'192.168.100.%'  IDENTIFIED BY 'my-new-password' WITH GRANT OPTION;



SLAVES:

# sudo service mysqld stop ; sudo systemctl disable mysqld

# sed -i.bak -e 's/\/var\/www\//\/var\/storage\/www\//g'  /etc/nginx/sites-available/main /etc/nginx/sites-available/freeraheem.com

update IP: 161.35.118.136
sed -e 's/listen .*:443/listen 192.81.213.215:443/g' /etc/nginx/sites-available/main /etc/nginx/sites-available/freeraheem.com
sed -i.bak -e 's/listen .*:443/listen 192.81.213.215:443/g' /etc/nginx/sites-available/main /etc/nginx/sites-available/freeraheem.com

# service nginx restart


/dev/sda on /var/storage type xfs (rw,noatime,attr2,discard,inode64,noquota)



SERVER SIDE:
/etc/exports:
10.116.0.0/24(rw,async,fsc,root_squash)

/etc/default/nfs-common:
STATDOPTS="-p 662 -o 2020"

/etc/default/nfs-kernel-server:
# Number of servers to start up
RPCNFSDCOUNT=64

# Runtime priority of server (see nice(1))
RPCNFSDPRIORITY=0

# Options for rpc.mountd.
# If you have a port-based firewall, you might want to set up
# a fixed port here using the --port option. For more information,
# see rpc.mountd(8) or http://wiki.debian.org/SecuringNFS
# To disable NFSv4 on the server, specify '--no-nfs-version 4' here
RPCMOUNTDOPTS="--manage-gids --no-nfs-version 4 -p 892 -o 2020"

# Do you want to start the svcgssd daemon? It is only required for Kerberos
# exports. Valid alternatives are "yes" and "no"; the default is "no".
NEED_SVCGSSD=""

# Options for rpc.svcgssd.
RPCSVCGSSDOPTS=""







# modprobe nfsd nfs lockd
# echo "options lockd nlm_udpport=32769 nlm_tcpport=32803" > /etc/modprobe.d/nfs-lockd.conf





